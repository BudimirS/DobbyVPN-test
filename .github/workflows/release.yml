name: Release

# Configures this workflow to run every time a change is pushed to the master.
on:
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  windows_build:
    runs-on: windows-latest
    strategy:
      matrix:
        go-version: ["1.23.2"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"

      - name: Install dependencies
        run: |
          cd src
          cd ..

      - name: Install submodules
        run: |
          git submodule add https://github.com/cbeuw/Cloak
          git submodule init
          git submodule update
          # mv -Force log-files/piper.go Cloak/internal/client/piper.go
          # mv -Force log-files/connector.go Cloak/internal/client/connector.go
          # mv -Force log-files/TLS.go Cloak/internal/client/TLS.go
          # mv -Force log-files/copy.go Cloak/internal/common/copy.go

      - name: Clone ck-client
        run: |
          mkdir Cloak/internal/out
          cp log-files/logging.go Cloak/internal/out/logging.go
          cp -r ck-client/Windows Cloak
          cp -r ck-client/WindowsTunnelService Cloak/Windows/WindowsTunnelService
          cp ck-client/app.go Cloak/Windows
          cp ck-client/ck-client.go Cloak/Windows
          cp ck-client/Icon.png Cloak/Windows
          cp ck-client/log_android.go Cloak/Windows
          cp ck-client/outline_device.go Cloak/Windows
          cp ck-client/outline_packet_proxy.go Cloak/Windows
          cp ck-client/protector.go Cloak/Windows

      - name: Install Go dependencies
        run: |
          cd Cloak/Windows
          go get github.com/amnezia-vpn/amneziawg-windows/tunnel@v0.1.4-0.20240526104134-db18f2297e5e
          go mod tidy
          go install fyne.io/fyne/v2/cmd/fyne@latest
          cd ../..

      - name: Build Windows tunnel service
        run: |
          cd Cloak/Windows/WindowsTunnelService
          go build -o tunnel-service.exe .
          cd ../../../

      - name: Build windows client
        run: |
          cd Cloak/Windows
          fyne package -os windows
          cd ../..

      - name: Install WinTun driver
        run: |
          curl.exe -v https://www.wintun.net/builds/wintun-0.14.1.zip --output wintun-0.14.1.zip
          powershell Expand-Archive -Force wintun-0.14.1.zip wintun-0.14.1

      - name: Make Windows zip
        run: |
          mkdir dobbyvpn-windows-amd64
          mkdir dobbyvpn-windows-amd64/libs
          cp Cloak/Windows/WindowsTunnelService/tunnel-service.exe dobbyvpn-windows-amd64/libs/tunnel-service.exe
          cp wintun-0.14.1/wintun/bin/amd64/wintun.dll wintun-0.14.1/wintun/bin/amd64/wintun.dll
          cp Cloak/Windows/Windows.exe dobbyvpn-windows-amd64/dobbyvpn-windows.exe
          tar.exe -cavf dobbyvpn-windows-amd64.tar.gz dobbyvpn-windows-amd64/

      - name: Upload Windows client
        uses: actions/upload-artifact@master
        with:
          name: dobbyvpn-windows-amd64.tar.gz
          path: dobbyvpn-windows-amd64.tar.gz

  linux_build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.23.2"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"
      - name: Install dependencies
        run: |
          cd src
          go get ./...
          cd ..
          sudo apt-get install golang gcc libgl1-mesa-dev xorg-dev
          sudo apt-get install gcc-multilib
          sudo apt-get install gcc-mingw-w64
      - name: Clone Cloak and copying ck-client
        run: |
          git submodule add https://github.com/cbeuw/Cloak
          git submodule init
          git submodule update
          # mv -f log-files/piper.go Cloak/internal/client/piper.go
          # mv -f log-files/connector.go Cloak/internal/client/connector.go
          # mv -f log-files/TLS.go Cloak/internal/client/TLS.go
          # mv -f log-files/copy.go Cloak/internal/common/copy.go
          mkdir Cloak/internal/out
          cp log-files/logging.go Cloak/internal/out/logging.go
          
          cp -r ck-client/Linux Cloak
          cp ck-client/Linux/awgconf/*.go Cloak/Linux/
          cp ck-client/Linux/awgconf/*.go Cloak/Linux/tunnel/
          
          cp ck-client/app.go Cloak/Linux
          cp ck-client/ck-client.go Cloak/Linux
          cp ck-client/Icon.png Cloak/Linux
          cp ck-client/log_android.go Cloak/Linux
          cp ck-client/outline_device.go Cloak/Linux
          cp ck-client/outline_packet_proxy.go Cloak/Linux
          cp ck-client/protector.go Cloak/Linux
          
          cd Cloak/Linux
          go mod tidy
          cd ../..
      - name: Build linux ck-client
        run: |
          cd Cloak/Linux

          cd tunnel/
          go build -o tunnel-service .
          cd ../

          go build -o dobbyvpn-linux-amd64 .
          cd ../../
      - name: Make linux zip
        run: |
          mkdir dobbyvpn-linux-amd64
          mkdir dobbyvpn-linux-amd64/libs/
          mv Cloak/Linux/dobbyvpn-linux-amd64 dobbyvpn-linux-amd64/dobbyvpn-linux-amd64
          mv Cloak/Linux/tunnel/tunnel-service dobbyvpn-linux-amd64/libs/tunnel-service
          zip -r dobbyvpn-linux-amd64.zip dobbyvpn-linux-amd64
      - name: Upload Linux client
        uses: actions/upload-artifact@master
        with:
          name: dobbyvpn-linux-amd64.zip
          path: dobbyvpn-linux-amd64.zip

  macos_build_arm64:
    runs-on: macos-latest
    strategy:
      matrix:
        go-version: ["1.23.2"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"
      - name: Clone Cloak and copying ck-client
        run: |
          git submodule add https://github.com/cbeuw/Cloak
          git submodule init
          git submodule update
          # mv -f log-files/piper.go Cloak/internal/client/piper.go
          # mv -f log-files/connector.go Cloak/internal/client/connector.go
          # mv -f log-files/TLS.go Cloak/internal/client/TLS.go
          # mv -f log-files/copy.go Cloak/internal/common/copy.go
          mkdir Cloak/internal/out
          cp log-files/logging.go Cloak/internal/out/logging.go
          cp -r ck-client/MacOs Cloak
          cp ck-client/app.go Cloak/MacOs
          cp ck-client/ck-client.go Cloak/MacOs
          cp ck-client/Icon.png Cloak/MacOs
          cp ck-client/log_android.go Cloak/MacOs
          cp ck-client/outline_device.go Cloak/MacOs
          cp ck-client/outline_packet_proxy.go Cloak/MacOs
          cp ck-client/protector.go Cloak/MacOs
          cd Cloak
          git clone --branch v1.6.0 https://github.com/database64128/swgp-go.git
          echo "replace github.com/database64128/swgp-go v1.6.0 => ./swgp-go" >> go.mod
          cd ..
          cd Cloak/MacOs
          go mod tidy
          cd ../..

      - name: Build macos ck-client
        run: |
          cd Cloak/MacOs
          go build -o dobbyvpn-darwin-arm64 .
      - name: Upload MacOs client
        uses: actions/upload-artifact@master
        with:
          name: dobbyvpn-darwin-arm64
          path: Cloak/MacOs/dobbyvpn-darwin-arm64

  android_build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.23.2"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Set up Git Submodules
        run: |
          git submodule update --init --recursive

      - name: Install dependencies
        run: |
          cd src
          go get ./...
          cd ..
          sudo apt-get install golang gcc libgl1-mesa-dev xorg-dev
          sudo apt-get install gcc-multilib
          sudo apt-get install gcc-mingw-w64

      - name: Android build
        run: |
          cd ck-android/CkClient
          chmod +x gradlew
          ./gradlew assembleDebug
          cd ../..
          cp ck-android/CkClient/app/build/outputs/apk/debug/app-debug.apk dobbyvpn-android.apk

      - name: Upload Android client
        uses: actions/upload-artifact@master
        with:
          name: dobbyvpn-android.apk
          path: dobbyvpn-android.apk

  release:
    runs-on: ubuntu-latest
    needs: [windows_build, linux_build, macos_build_arm64, android_build]
    permissions: write-all

    steps:
      - uses: actions/checkout@v2

      - name: Make release dir
        run: mkdir release

      - name: Download linux client
        uses: actions/download-artifact@master
        with:
          name: dobbyvpn-linux-amd64.zip
          path: release
      - name: Download windows client
        uses: actions/download-artifact@master
        with:
          name: dobbyvpn-windows.exe
          path: release
      - name: Download macos client
        uses: actions/download-artifact@master
        with:
          name: dobbyvpn-darwin-arm64
          path: release
      - name: Download android client
        uses: actions/download-artifact@master
        with:
          name: dobbyvpn-android.apk
          path: release

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
